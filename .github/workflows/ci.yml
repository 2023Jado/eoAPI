name: CI

# On every pull request, but only on push to master
on:
  push:
    branches:
    - master
    tags:
    - '*'
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Run pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit
          pre-commit run --all-files

      - name: Launch database and build services
        run: |
          docker-compose up -d database
          docker-compose up build stac raster vector

      - name: install lib postgres
        run: |
          sudo apt update
          wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O- | sudo apt-key add -
          echo "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main" | sudo tee /etc/apt/sources.list.d/postgresql.list
          sudo apt update
          sudo apt-get install --yes libpq-dev postgis postgresql-14-postgis-3

      - name: Install python dependencies
        run: |
          python -m pip install pytest pytest-asyncio httpx pypgstac==0.7.1 psycopg[pool] brotlipy requests boto3 pytest-pgsql psycopg2

      - name: CDK DB Bootstrap tests
        working-directory: ./stack
        run: |
          python -m pytest tests/test_bootstrap.py -v -ss

      - name: Ingest Stac Items/Collection and public data
        run: |
          pypgstac pgready --dsn postgresql://username:password@0.0.0.0:5439/postgis
          pypgstac load collections .github/workflows/data/noaa-emergency-response.json --dsn postgresql://username:password@0.0.0.0:5439/postgis --method insert_ignore
          pypgstac load items .github/workflows/data/noaa-eri-nashville2020.json --dsn postgresql://username:password@0.0.0.0:5439/postgis --method insert_ignore
          psql postgresql://username:password@0.0.0.0:5439/postgis -f .github/workflows/data/my_data.sql

      - name: Launch services
        run: docker-compose up -d stac raster vector

      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash

      - name: Integrations tests
        run: python -m pytest .github/workflows/tests/

      - name: Stop services
        run: docker-compose stop
